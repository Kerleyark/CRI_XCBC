---

   - name: get OpenHPC Repo #hardcoded version # :(
     yum: name={{ openhpc_release_rpm }} state=present
 
   - name: get xCAT Repo 
     get_url:
        url: https://xcat.org/files/xcat/repos/yum/latest/xcat-core/xcat-core.repo
        dest: /etc/yum.repos.d/
        mode: '0440'
     when: use_warewulf == false
 
   - name: get xCAT dependencies Repo 
     get_url:
        url: https://xcat.org/files/xcat/repos/yum/xcat-dep/rh7/x86_64/xcat-dep.repo
        dest: /etc/yum.repos.d/
        mode: '0440'
     when: use_warewulf == false

   - name: create ISO storage location
     file:
        path: /opt/iso/
        state: directory
        mode: '0755'
     when: use_warewulf == false

   - name: get CentOS ISO Checksum
     shell: wget -q -O - "{{ CentOS_checksums_url }}" | grep "{{ CentOS_iso_version }}" | cut -d' ' -f 1
     register: centos_iso_sha256sum

   - name: check checksum output
     debug:
       var: centos_iso_sha256sum

   - name: get CentOS ISO
     get_url:
        url: "{{ CentOS_iso_url }}"
        dest: /opt/iso/
        checksum: "sha256:{{ centos_iso_sha256sum.stdout }}"
     when: use_warewulf == false
 
   - name: install OpenHPC base, warewulf, slurm server, and compiler packages
     yum:
       name: [ 
               "ohpc-base",
               "ohpc-warewulf",
               "ohpc-slurm-server",
               "lmod-defaults-gnu-openmpi-ohpc",
               "openmpi-gnu-ohpc", 
               "gnu-compilers-ohpc"
             ]
       state: latest
     when: use_warewulf == true

#ohpc-base ohpc-slurm-server lmod-defaults-gnu-openmpi-ohpc openmpi-gnu-ohpc gnu-compilers-ohpc xCAT

   - name: install OpenHPC base, xCAT, slurm server, and compiler packages
     yum:
       name: [ 
               "ohpc-base",
               "ohpc-slurm-server",
               "lmod-defaults-gnu-openmpi-ohpc",
               "openmpi-gnu-ohpc", 
               "gnu-compilers-ohpc",
               "xCAT"
             ]
       state: latest
     when: use_warewulf == false

   - name: yum update
     yum: name=* state=latest update_cache=yes

   - name: add slurm user
     user: name=slurm state=present system=yes

   - name: create slurm.conf
     template: src=slurm_conf.j2 dest=/etc/slurm/slurm.conf

   - name: create slurmdbd.conf
     template: src=slurmdbd_conf.j2 dest=/etc/slurm/slurmdbd.conf

   - name: put the sacctmgr config in /etc/slurm
     copy: src=xcbc-example.cfg dest=/etc/slurm/sacctmgr-heirarchy.cfg

   - name: set the gres.conf on the master
     copy: src=gres.conf dest=/etc/slurm/gres.conf

   - name: create the slurmdbd log file
     file: path=/var/log/slurmdbd.log state=touch owner=slurm group=slurm

   - name: insert rhel-xcbc WW template
     copy: src=include-rhel-xcbc dest="{{ template_path }}include-rhel-xcbc"
     when: use_warewulf == true

 
   - name: fix the warewulf wwsh script... ARGH (line 29)
     lineinfile: 
       dest: /bin/wwsh
       insertafter: '^\$ENV\{\"PATH\"\}'
       line: "delete @ENV{'PATH', 'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};"
       state: present
     when: use_warewulf == true


   - name: fix the warewulf wwnodescan script... ARGH (line 96)
     lineinfile: 
       dest: /bin/wwnodescan
       insertafter: '^\$ENV\{\"PATH\"\}'
       line: "delete @ENV{'PATH', 'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};"
       state: present
     when: use_warewulf == true

   - name: initialize slurmdb databases
     mysql_db:
       name: "{{ slurm_acct_db }}"
       state: present

   - name: create slurmdb user
     mysql_user:
       name: "{{ slurmdb_sql_user }}"
       password: "{{ slurmdb_sql_pass }}"
       priv: "{{ slurm_acct_db }}.*:ALL"
       state: present

   - name: start and enable munge
     service: 
       name: munge
       state: started
       enabled: yes

   - name: start and enable slurmdbd
     service: 
       name: slurmdbd
       state: started
       enabled: yes

   - name: load sacctmgr config
     command: sacctmgr -i load /etc/slurm/sacctmgr-heirarchy.cfg

   - name: start and enable slurmctld
     service: 
       name: slurmctld
       state: started
       enabled: yes

