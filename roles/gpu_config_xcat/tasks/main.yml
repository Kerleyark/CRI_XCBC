---

  - name: yum install GPU driver dependencies
    yum:
      name: [
             "dkms",
             "glibc-devel",
             "glibc-headers",
             "kernel-devel",
             "kernel-headers",
            ]
      state: latest

#  - name: create build dir
#    file: path="/root/nvidia_build/" state=directory

  - name: get CUDA toolkit
    get_url:
      url: "{{ nvidia_cuda_toolkit_runfile_url }}"
      dest: /root/
      mode: '0755'
#    args:
#      creates: "/root/{{ nvidia_cuda_toolkit_runfile_url }}"

#  - name: break
#    fail:
  - name: blacklist nouveau in modprobe
    copy: src=blacklist_modprobe dest=/etc/modprobe.d/blacklist.conf

  - name: regenerate the initramfs
    shell: dracut --force

  - name: reboot
    reboot:

  - name: wait for finished boot
    wait_for_connection:
      timeout: 600
      delay: 180
      sleep: 20
 
  - name: re-gather facts
    setup:

  - name: Run CUDA toolkit installation
    shell: "/root/{{ cuda_toolkit_installer }} {{ cuda_toolkit_args }}"

#   - name: build nvidia kernel modules in the vnfs
#     shell: "/root/nvidia_build/{{ nvidia_driver_installer }} {{ nvidia_driver_args }}"
##     shell: {{ nvidia_kernel_build_cmd }}
##     vars:
##       nvidia_kernel_build_cmd: "/root/nvidia_build/{{ nvidia_driver_installer }} {{ nvidia_driver_args }}"
#
#   - name: build cuda toolkit
#     shell: "/root/nvidia_build/{{ cuda_toolkit_installer }} {{ cuda_toolkit_args }}"
##     shell: chroot {{ gpu_chroot_loc }} {{ cuda_toolkit_build_cmd }}
##     vars:
##       cuda_toolkit_build_cmd: "/root/nvidia_build/{{ cuda_toolkit_installer }} {{ cuda_toolkit_args }}"
#
#  - name: build cuda samples
#    shell: "/root/nvidia_build/{{ cuda_samples_installer }} {{ cuda_samples_args }}"
##     shell: chroot {{ gpu_chroot_loc }} {{ cuda_samples_build_cmd }}
##     vars:
##       cuda_samples_build_cmd: "/root/nvidia_build/{{ cuda_samples_installer }} {{ cuda_samples_args }}"
##
#  - name: blacklist nouveau in grub
#    copy: src=grub_default dest=/etc/default/grub
#
#  - name: create rebuild-grub service
#    copy: src=rebuild-grub.service dest=/etc/systemd/system/rebuild-grub.service
#
#  - name: enable rebuild-grub.service
#    command: systemctl enable rebuild-grub.service

  - name: create service create-cuda-devices
    copy: src=create-cuda-devices.service dest=/etc/systemd/system/create-cuda-devices.service

  - name: enable create-cuda-devices
    command:  systemctl enable create-cuda-devices

